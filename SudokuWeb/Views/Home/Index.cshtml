@model SudokuModel
@{
    ViewData["Title"] = "Home Page";
    var rand = new Random();
    var degree = 2;
}

<script>
    var sudokuData = @Json.Serialize(Model.Sudoku.Positions)
    var shownValues = @Json.Serialize(Model.Sudoku.ShownPositions)
    var curSelectedNum = 0;

    // Set the date we're counting down to
    var startDate = new Date().getTime();

    window.onload = function () {
        this.setInterval(timerLabel, 1000)
        this.updateCounts()
    }
</script>

<div class="text-center">
    <h1 class="display-4">Welcome Annie</h1>
</div>

@* congrats message *@
<p id="congratsElement" style="font-size:45px;margin-top:0px"></p>

@* timer *@
<p id="timerElement" style="font-size:45px;margin-top:0px"></p>

@* congrats message *@
<div id="playAgain"></div>

@* the sudoku board *@
<div style="text-align:center">
    <table style="border:solid;width:400px;table-layout:fixed">
        @for (int i = 0; i < Model.Sudoku.Positions.Length; i++)
        {
            <tr>
                @for (int j = 0; j < Model.Sudoku.Positions[i].Length; j++)
                {
                    <td onclick="highlightRowCol(@i, @j)" style="background-color:@((Model.Sudoku.ShownPositions[i][j]) ? "grey" : "white");border-left:@(j%3==0?"solid":"dotted");border-top:@(i%3==0?"solid":"dotted")">
                        @if (Model.Sudoku.ShownPositions[i][j])
                        {
                            <input type="number" style="width:75%;text-align:center" min="1" max="9" onchange="checkGuess(this, @i, @j)">
                        }
                        else
                        {
                            <label style="width:8px;font-weight:bold">@($"{Model.Sudoku.Positions[i][j]}")</label>
                        }
                    </td>
                }
            </tr>
        }
    </table>
</div>

<hr />

@* highlight options *@
<label>Highlight a number:</label>

<div>
    @for (int i = 0; i < 9; i++)
    {
        <span>
            <input type="button" value="@(i+1)" onclick="highlightOption(@(i+1))" />
            <sup>
                <label id="numberShownLabel@(i+1)"></label>
            </sup>
        </span>
    }
</div>